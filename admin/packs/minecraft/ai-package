#!/usr/bin/env/python3

# Sample ai-package module

# Environment dictionary values:
# 'ConfDestination' -> String of full path of installation destination

from ailurus import pkgutil

import os
import shutil
from urllib.request import urlopen

DEFAULT_ENV = {
        'Destination': '/opt/ailurus/apps/minecraft',
        'InitScriptDestination': '/etc/init.d/'
        }

MC_URL = "http://ci.bearbin.net/job/MCServer%20Linux-RasPi%20HardFloat/lastSuccessfulBuild/artifact/MCServer.tar"
MC_MD5_URL = "http://ci.bearbin.net/job/MCServer%20Linux-RasPi%20HardFloat/lastSuccessfulBuild/artifact/MCServer.tar.md5"

def DefaultEnv(env):
    new_env = {}
    for key in DEFAULT_ENV:
        new_env[key] = env[key] if env and key in env else DEFAULT_ENV[key]
    return new_env

def install(env = None):
    env = DefaultEnv(env)
    install_dir = env['Destination']
    init_script_dir = env['InitScriptDestination']

    print("Getting minecraft md5sum")
    mc_md5 = urlopen(MC_MD5_URL).read().decode('utf-8').split(' ')[0]
    print("md5 is " + mc_md5)

    print("Getting minecraft package")
    mc_path = pkgutil.GetPackage(MC_URL, mc_md5)

    print("Copying minecraft to %s" % install_dir)
    os.mkdir(install_dir)
    pkgutil.ExtractTarball(mc_path, install_dir)

    print("Copying minecraft init script to %s" % init_script_dir)
    shutil.copy('conf/minecraft', init_script_dir)
    os.system("update-rc.d minecraft defaults")

    print("Starting minecraft server")
    os.system("service minecraft start")


def remove(env = None):
    env = DefaultEnv(env)

    print("Removing minecraft")
    shutil.rmtree(env['Destination'])
    os.remove(env['InitScriptDestination'] + "minecraft")
    os.system("update-rc.d -f minecraft remove")


def configure(env):
    pass
