#!/usr/bin/env/python3

# Sample ai-package module

# Environment dictionary values:
# 'Destination' -> String of full path of installation destination

from ailurus import pkgutil

import os
import shutil

DEFAULT_ENV = {
        'Destination': '/opt/ailurus/www/gitlist',
        }

GL_URL = "https://s3.amazonaws.com/gitlist/gitlist-0.5.0.tar.gz"
GL_MD5 = "8d13215311c344a1be8e6f91d53acf76"

def DefaultEnv(env):
    new_env = {}
    for key in DEFAULT_ENV:
        new_env[key] = env[key] if env and key in env else DEFAULT_ENV[key]
    return new_env

def install(env = None):
    env = DefaultEnv(env)
    install_dir = env['Destination']

    print("Getting gitlist package")
    gl_path = pkgutil.GetPackage(GL_URL, GL_MD5)

    print("Extracting gitlist to %s" % env['Destination'])
    pkgutil.ExtractTarball(gl_path, install_dir, "gitlist/")

    print("Creating repo directory at %s/repos/" % install_dir)
    pkgutil.ExtractTarball("repos/example_repo.tgz", install_dir + "/repos/")

    print("Copying gitlist configuration")
    shutil.copy("conf/config.ini", install_dir)

    print("Creating cache directory")
    cache_dir = install_dir + "/cache"
    os.mkdir(cache_dir)
    os.chmod(cache_dir, 0o777)

    print("Assigning ownership")
    os.system('chown -R www-data %s' % install_dir)

def remove(env = None):
    env = DefaultEnv(env)

    print("Removing gitlist")
    shutil.rmtree(env['Destination'])

def configure(env):
    pass
