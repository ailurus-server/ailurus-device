#!/usr/bin/env/python3

# Sample ai-package module

# Environment dictionary values:
# 'ConfDestination' -> String of full path of installation destination

from ailurus import pkgutil

import os
import shutil

DEFAULT_ENV = {
        'NginxConfDestination': '/opt/ailurus/nginx-confs/',
        'JenkinsConfDestination': '/etc/default/'
        }

J_URL = "http://pkg.jenkins-ci.org/debian/binary/jenkins_1.575_all.deb"
J_MD5 = "25cf594cc4615e15825f7cc70cafb142"
J_PKG_NAME = "jenkins"

def DefaultEnv(env):
    new_env = {}
    for key in DEFAULT_ENV:
        new_env[key] = env[key] if env and key in env else DEFAULT_ENV[key]
    return new_env

def install(env = None):
    env = DefaultEnv(env)
    nginx_conf_dir = env['NginxConfDestination']
    jenkins_conf_dir = env['JenkinsConfDestination']

    print("Getting jenkins package")
    j_path = pkgutil.GetPackage(J_URL, J_MD5)

    print("Installing ")
    os.system("dpkg -i %s" % j_path)

    print("Copying jenkins configuration")
    shutil.copy("conf/jenkins.conf", nginx_conf_dir)
    shutil.copy("conf/jenkins", jenkins_conf_dir)

    print("Restarting jenkins")
    os.system("service jenkins restart")

def remove(env = None):
    env = DefaultEnv(env)

    print("Removing jenkins")
    os.remove(env['NginxConfDestination'] + "jenkins.conf")

    os.system('dpkg -r %s' % J_PKG_NAME)

def configure(env):
    pass
